kind: Deployment
apiVersion: apps/v1
metadata:
  name: pong-server
  namespace: '$SERVICES_NAMESPACE'
  labels:
    app: pong-server
spec:
  replicas: 1
  selector:
    matchLabels:
      app: pong-server
  template:
    metadata:
      labels:
        app: pong-server
    spec:
      containers:
        - image: '$REGISTRY/$DOCKERHUB_NAMESPACE/pong-server:$DOCKER_IMAGE_VERSION.$BUILD_NUMBER-SNAPSHOT'
          name: pong-server
          ports:
            - containerPort: 80
              name: http-80
              protocol: TCP
          env:
            - name: PARAMS
              value: >-
                --server.port=80
            - name: JAVA_OPTS
              value: '-Xms256m -Xmx312m'
          resources: {}
          livenessProbe:
            httpGet:
              path: /actuator/health
              port: 80
              scheme: HTTP
            initialDelaySeconds: 120
            timeoutSeconds: 1
            periodSeconds: 25
            successThreshold: 1
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /actuator/health
              port: 80
              scheme: HTTP
            initialDelaySeconds: 90
            timeoutSeconds: 1
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 3
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          imagePullPolicy: Always
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      dnsPolicy: ClusterFirst
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 25%
      maxSurge: 25%
  revisionHistoryLimit: 10
  progressDeadlineSeconds: 600
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: pong-server
  name: pong-server
  namespace: '$SERVICES_NAMESPACE'
spec:
  ports:
    - name: http-80
      port: 80
      protocol: TCP
      targetPort: 80
      nodePort: 32031
  selector:
    app: pong-server
  sessionAffinity: None
  type: NodePort
